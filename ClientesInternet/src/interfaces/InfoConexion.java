/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import estilos.GestionCeldas;
import estilos.GestionEncabezadoTabla;
import estilos.ModeloTablaLU;
import static interfaces.Menu.escritorio;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SwingUtilities;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import metodos.Placeholder;
import objetos.Info_Conexion;

/**
 *
 * @author Cristhian
 */
public class InfoConexion extends javax.swing.JInternalFrame {

    ModeloTablaLU dtm_infoc;
    Placeholder placeholder;
    ArrayList<Info_Conexion> listai;
    Info_Conexion additem;
    TableRowSorter trs;
    RowSorter<TableModel> sorter;
    int colum = 0, rowNumber = 0;

    public InfoConexion() {
        initComponents();
        dtm_infoc = new ModeloTablaLU();
        listai = new ArrayList<>();
        sorter = new TableRowSorter<TableModel>(dtm_infoc);
        cargar_datos();
        tbl_datos.setModel(dtm_infoc);
        tbl_datos.setRowSorter(sorter);
        placeholder = new Placeholder("Ingrese el apellido para iniciar el filtrado", txt_buscar);
        tabla_cargada();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_datos = new javax.swing.JTable();
        label_subtitle = new javax.swing.JLabel();
        txt_buscar = new javax.swing.JTextField();
        cb_orden = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Info. Conexion");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/connection_info.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 204, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)), "Info. de Conexi√≥n", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        tbl_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_datosMouseClicked(evt);
            }
        });
        tbl_datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbl_datosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_datos);

        label_subtitle.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        label_subtitle.setForeground(new java.awt.Color(255, 255, 255));
        label_subtitle.setText("Ordenar Por:");

        txt_buscar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_buscarKeyTyped(evt);
            }
        });

        cb_orden.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cb_orden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "APELLIDOS", "NOMBRES", "TIPO DE SERVICIO", "DISPOSITIVOS", "FECHA DE CONTRATO" }));
        cb_orden.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_ordenItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_subtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cb_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_subtitle)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_datosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_datosKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_datosKeyTyped

    private void txt_buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyTyped
        txt_buscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + txt_buscar.getText(), 2));
            }
        });
        trs = new TableRowSorter(dtm_infoc);
        tbl_datos.setRowSorter(trs);
    }//GEN-LAST:event_txt_buscarKeyTyped

    private void cb_ordenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_ordenItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            colum = cb_orden.getSelectedIndex();
            if (colum >= 0) {
                if (colum > 2) {
                    tbl_datos.getRowSorter().toggleSortOrder(colum + 1);
                } else {
                    tbl_datos.getRowSorter().toggleSortOrder(colum);
                }
            }
        }
    }//GEN-LAST:event_cb_ordenItemStateChanged

    private void tbl_datosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_datosMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            Point p = evt.getPoint();
            rowNumber = tbl_datos.rowAtPoint(p);
            popupTable();
        }
    }//GEN-LAST:event_tbl_datosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_orden;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_subtitle;
    private javax.swing.JTable tbl_datos;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables

    private void cabecera() {
        dtm_infoc.addColumn("ID");
        dtm_infoc.addColumn("APELLIDOS");
        dtm_infoc.addColumn("NOMBRES");
        dtm_infoc.addColumn("IP CLIENTE");
        dtm_infoc.addColumn("TIPO DE SERVICIO");
        dtm_infoc.addColumn("CANT. DISPOSITIVOS");
        dtm_infoc.addColumn("FECHA DE CONTRATO");
    }

    private void cargar_datos() {
        //String ip_dispo = "<html>192.168.6.11<br>192.168.6.12<br>192.168.6.13</html>";
        additem = new Info_Conexion("001", "Soto Navarro", "Cristhian Arturo", "192.168.6.10", "Wifi", "3", "12/12/12");
        listai.add(additem);
        additem = new Info_Conexion("002", "Castro Alvarez", "Zurita Mantil", "192.168.6.15", "Cableado", "2", "13/12/12");
        listai.add(additem);
        additem = new Info_Conexion("003", "Alvarado Farias", "Angie Carolina", "192.168.6.18", "Wifi", "2", "11/12/12");
        listai.add(additem);
    }

    private void llenar_celdas() {
        //copiar datos de la lista a la tabla
        String data[] = new String[7];
        for (int i = 0; i < listai.size(); i++) {
            data[0] = listai.get(i).getId();
            data[1] = listai.get(i).getApellidos();
            data[2] = listai.get(i).getNombres();
            data[3] = listai.get(i).getIp_cliente();
            data[4] = listai.get(i).getIp_dispositivos();
            data[5] = listai.get(i).getCant_dispositivos();
            data[6] = listai.get(i).getFecha_contrato();
            dtm_infoc.addRow(data);
        }
    }

    private void tabla_cargada() {
        //llamar la cabecera de la tabla
        cabecera();
        //llenado de celdas
        llenar_celdas();
        //estilo de celda
        tbl_datos.getColumnModel().getColumn(0).setCellRenderer(new GestionCeldas("numerico"));
        tbl_datos.getColumnModel().getColumn(1).setCellRenderer(new GestionCeldas("texto"));
        tbl_datos.getColumnModel().getColumn(2).setCellRenderer(new GestionCeldas("texto"));
        tbl_datos.getColumnModel().getColumn(3).setCellRenderer(new GestionCeldas("numerico"));
        tbl_datos.getColumnModel().getColumn(4).setCellRenderer(new GestionCeldas("numerico"));
        tbl_datos.getColumnModel().getColumn(5).setCellRenderer(new GestionCeldas("numerico"));
        tbl_datos.getColumnModel().getColumn(6).setCellRenderer(new GestionCeldas("numerico"));
        //reordenar la tabla
        tbl_datos.getTableHeader().setReorderingAllowed(false);
        //alto de las celdas
        tbl_datos.setRowHeight(30);
//        tbl_datos.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        //Ancho de las celdas
        tbl_datos.getColumnModel().getColumn(0).setPreferredWidth(80);
        tbl_datos.getColumnModel().getColumn(1).setPreferredWidth(150);
        tbl_datos.getColumnModel().getColumn(2).setPreferredWidth(150);
//        tbl_datos.getColumnModel().getColumn(3).setPreferredWidth(150);
//        tbl_datos.getColumnModel().getColumn(4).setPreferredWidth(150);
//        tbl_datos.getColumnModel().getColumn(5).setPreferredWidth(150);
//        tbl_datos.getColumnModel().getColumn(6).setPreferredWidth(150);
        //estilos de cabecera
        JTableHeader jTableHeader = tbl_datos.getTableHeader();
        jTableHeader.setDefaultRenderer(new GestionEncabezadoTabla());
        tbl_datos.setTableHeader(jTableHeader);
    }

    private void popupTable() {
        JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem menuItem = new JMenuItem("M√°s Detalles", new ImageIcon(getClass().getResource("/recursos/details.png")));

        menuItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                detalles_conexion();
            }
        });
        popupMenu.add(menuItem);
        tbl_datos.setComponentPopupMenu(popupMenu);
    }

    private void detalles_conexion() {
        DetallesConexion dc = new DetallesConexion();
        escritorio.add(dc);
        Dimension escritorio_size = escritorio.getSize();
        Dimension dc_size = dc.getSize();
        dc.setLocation((escritorio_size.width - dc_size.width) / 2, (escritorio_size.height - dc_size.height) / 2);
        dc.show();
        dispose();
    }
}
