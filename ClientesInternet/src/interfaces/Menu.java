/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyVetoException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Cristhian
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    boolean bandera;

    public Menu() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        cerrar();
        new Thread(new hilo()).start();
        Image icon = new ImageIcon(getClass().getResource("/recursos/icono.png")).getImage();
        setIconImage(icon);
        login_cargado();
        menu.setVisible(false);
        escritorio.setBorder(new metodos.ImagenFondo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        label_hora = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        m_modulos = new javax.swing.JMenu();
        m_tablas = new javax.swing.JMenu();
        sm_rclientes = new javax.swing.JMenuItem();
        sm_restados = new javax.swing.JMenuItem();
        sm_rtipos = new javax.swing.JMenuItem();
        m_movimientos = new javax.swing.JMenu();
        sm_rcobros = new javax.swing.JMenuItem();
        m_reportes = new javax.swing.JMenu();
        sm_clientes = new javax.swing.JMenuItem();
        sm_record = new javax.swing.JMenuItem();
        sm_infoc = new javax.swing.JMenuItem();
        separador = new javax.swing.JPopupMenu.Separator();
        sm_estadisticas = new javax.swing.JMenuItem();
        m_utilitarios = new javax.swing.JMenu();
        sm_rusuarios = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        label_hora.setFont(new java.awt.Font("Segoe UI Black", 1, 48)); // NOI18N
        label_hora.setForeground(new java.awt.Color(255, 255, 255));
        label_hora.setText("Hora y minuto");

        escritorio.setLayer(label_hora, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioLayout.createSequentialGroup()
                .addContainerGap(322, Short.MAX_VALUE)
                .addComponent(label_hora)
                .addContainerGap())
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioLayout.createSequentialGroup()
                .addContainerGap(333, Short.MAX_VALUE)
                .addComponent(label_hora)
                .addContainerGap())
        );

        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
        });

        m_modulos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/modules.png"))); // NOI18N
        m_modulos.setText("Modulos");
        m_modulos.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        menu.add(m_modulos);

        m_tablas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/tables.png"))); // NOI18N
        m_tablas.setText("Tablas");
        m_tablas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        sm_rclientes.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_rclientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/register_customer.png"))); // NOI18N
        sm_rclientes.setText("Registro de Clientes");
        sm_rclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sm_rclientesMouseClicked(evt);
            }
        });
        sm_rclientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_rclientesActionPerformed(evt);
            }
        });
        m_tablas.add(sm_rclientes);

        sm_restados.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_restados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/user_state.png"))); // NOI18N
        sm_restados.setText("Estados");
        sm_restados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_restadosActionPerformed(evt);
            }
        });
        m_tablas.add(sm_restados);

        sm_rtipos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_rtipos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/type_of_user.png"))); // NOI18N
        sm_rtipos.setText("Tipos");
        sm_rtipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_rtiposActionPerformed(evt);
            }
        });
        m_tablas.add(sm_rtipos);

        menu.add(m_tablas);

        m_movimientos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/movements.png"))); // NOI18N
        m_movimientos.setText("Movimientos");
        m_movimientos.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        sm_rcobros.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_rcobros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/payment.png"))); // NOI18N
        sm_rcobros.setText("Cobros");
        sm_rcobros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_rcobrosActionPerformed(evt);
            }
        });
        m_movimientos.add(sm_rcobros);

        menu.add(m_movimientos);

        m_reportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/reports.png"))); // NOI18N
        m_reportes.setText("Reportes");
        m_reportes.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        sm_clientes.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_clientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/customer_report.png"))); // NOI18N
        sm_clientes.setText("Clientes");
        sm_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_clientesActionPerformed(evt);
            }
        });
        m_reportes.add(sm_clientes);

        sm_record.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_record.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/debtors_and_non-debtors.png"))); // NOI18N
        sm_record.setText("Récord de Clientes");
        sm_record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_recordActionPerformed(evt);
            }
        });
        m_reportes.add(sm_record);

        sm_infoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_infoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/connection_info.png"))); // NOI18N
        sm_infoc.setText("Info. de Conexión");
        sm_infoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_infocActionPerformed(evt);
            }
        });
        m_reportes.add(sm_infoc);
        m_reportes.add(separador);

        sm_estadisticas.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_estadisticas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/estadisticas.png"))); // NOI18N
        sm_estadisticas.setText("Estadisticas");
        sm_estadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_estadisticasActionPerformed(evt);
            }
        });
        m_reportes.add(sm_estadisticas);

        menu.add(m_reportes);

        m_utilitarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/settings.png"))); // NOI18N
        m_utilitarios.setText("Utilitarios");
        m_utilitarios.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        sm_rusuarios.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sm_rusuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/user_info.png"))); // NOI18N
        sm_rusuarios.setText("Usuarios");
        sm_rusuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_rusuariosActionPerformed(evt);
            }
        });
        m_utilitarios.add(sm_rusuarios);

        menu.add(m_utilitarios);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sm_rclientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_rclientesActionPerformed
        RegistroClientes rc = new RegistroClientes();
        bandera = checkInternalFrame(rc.getTitle());
        if (bandera == true) {
            escritorio.add(rc);
            Dimension escritorio_size = escritorio.getSize();
            Dimension rc_size = rc.getSize();
            rc.setLocation((escritorio_size.width - rc_size.width) / 2, (escritorio_size.height - rc_size.height) / 2);
            rc.show();
        } else {
            
        }
    }//GEN-LAST:event_sm_rclientesActionPerformed

    private void sm_rusuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_rusuariosActionPerformed
        ListarUsuarios lu = new ListarUsuarios();
        bandera = checkInternalFrame(lu.getTitle());
        if (bandera == true) {
            escritorio.add(lu);
            Dimension escritorio_size = escritorio.getSize();
            Dimension lu_size = lu.getSize();
            lu.setLocation((escritorio_size.width - lu_size.width) / 2, (escritorio_size.height - lu_size.height) / 2);
            lu.show();
        } else {

        }
    }//GEN-LAST:event_sm_rusuariosActionPerformed

    private void sm_restadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_restadosActionPerformed
        EstadoCliente ec = new EstadoCliente();
        bandera = checkInternalFrame(ec.getTitle());
        if (bandera == true) {
            escritorio.add(ec);
            Dimension escritorio_size = escritorio.getSize();
            Dimension ec_size = ec.getSize();
            ec.setLocation((escritorio_size.width - ec_size.width) / 2, (escritorio_size.height - ec_size.height) / 2);
            ec.show();
        } else {

        }
    }//GEN-LAST:event_sm_restadosActionPerformed

    private void sm_rtiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_rtiposActionPerformed
        TipoUsuario tu = new TipoUsuario();
        bandera = checkInternalFrame(tu.getTitle());
        if (bandera == true) {
            escritorio.add(tu);
            Dimension escritorio_size = escritorio.getSize();
            Dimension tu_size = tu.getSize();
            tu.setLocation((escritorio_size.width - tu_size.width) / 2, (escritorio_size.height - tu_size.height) / 2);
            tu.show();
        } else {

        }
    }//GEN-LAST:event_sm_rtiposActionPerformed

    private void sm_rcobrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_rcobrosActionPerformed
        Cobros c = new Cobros();
        bandera = checkInternalFrame(c.getTitle());
        if (bandera == true) {
            escritorio.add(c);
            try {
                c.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            c.show();
        } else {

        }
    }//GEN-LAST:event_sm_rcobrosActionPerformed

    private void sm_recordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_recordActionPerformed
        RecordCliente rc = new RecordCliente();
        bandera = checkInternalFrame(rc.getTitle());
        if (bandera == true) {
            escritorio.add(rc);
            try {
                rc.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            rc.show();
        } else {

        }
    }//GEN-LAST:event_sm_recordActionPerformed

    private void sm_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_clientesActionPerformed
        Clientes c = new Clientes();
        bandera = checkInternalFrame(c.getTitle());
        if (bandera == true) {
            escritorio.add(c);
            try {
                c.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            c.show();
        } else {

        }
    }//GEN-LAST:event_sm_clientesActionPerformed

    private void sm_infocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_infocActionPerformed
        InfoConexion ic = new InfoConexion();
        bandera = checkInternalFrame(ic.getTitle());
        if (bandera == true) {
            escritorio.add(ic);
            try {
                ic.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            ic.show();
        } else {
            
        }
    }//GEN-LAST:event_sm_infocActionPerformed

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked

    }//GEN-LAST:event_menuMouseClicked

    private void sm_rclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sm_rclientesMouseClicked

    }//GEN-LAST:event_sm_rclientesMouseClicked

    private void sm_estadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_estadisticasActionPerformed
        Estadisticas e = new Estadisticas();
        bandera = checkInternalFrame(e.getTitle());
        if (bandera == true) {
            escritorio.add(e);
            Dimension escritorio_size = escritorio.getSize();
            Dimension e_size = e.getSize();
            e.setLocation((escritorio_size.width - e_size.width) / 2, (escritorio_size.height - e_size.height) / 2);
            e.show();
        } else {

        }
    }//GEN-LAST:event_sm_estadisticasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane escritorio;
    private javax.swing.JLabel label_hora;
    private javax.swing.JMenu m_modulos;
    private javax.swing.JMenu m_movimientos;
    private javax.swing.JMenu m_reportes;
    private javax.swing.JMenu m_tablas;
    private javax.swing.JMenu m_utilitarios;
    public static javax.swing.JMenuBar menu;
    private javax.swing.JPopupMenu.Separator separador;
    private javax.swing.JMenuItem sm_clientes;
    private javax.swing.JMenuItem sm_estadisticas;
    private javax.swing.JMenuItem sm_infoc;
    private javax.swing.JMenuItem sm_rclientes;
    private javax.swing.JMenuItem sm_rcobros;
    private javax.swing.JMenuItem sm_record;
    private javax.swing.JMenuItem sm_restados;
    private javax.swing.JMenuItem sm_rtipos;
    private javax.swing.JMenuItem sm_rusuarios;
    // End of variables declaration//GEN-END:variables

    private void login_cargado() {
        Login cargar_login = new Login();
        escritorio.add(cargar_login);
        Dimension escritorio_size = escritorio.getSize();
        Dimension login_size = cargar_login.getSize();
        cargar_login.setLocation((escritorio_size.width + login_size.width) / 2, (escritorio_size.height + login_size.height) / 7);
        cargar_login.show();
    }

    public class hilo implements Runnable {

        @Override
        public void run() {
            new Timer(0, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Date d = new Date();
                    SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
                    label_hora.setText(s.format(d));
                }
            }).start();

        }

    }

    private boolean checkInternalFrame(Object obj) {
        JInternalFrame[] activos = Menu.escritorio.getAllFrames();
        boolean cerrado = true;
        int i = 0;
        while (i < activos.length && cerrado) {
            if (activos[i].getTitle() == obj) {
                cerrado = false;
            }
            i++;
        }
        return cerrado;
    }

    public void cerrar() {
        try {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent we) {
                    confirmarSalida();
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void confirmarSalida() {
        //confirmar salida del sistema
        int valor = JOptionPane.showConfirmDialog(this, "¿Estás seguro de cerrar el Sistema?", "Advertencia...", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Gracias por su visita, Hasta pronto", "Cerrando Sistema", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        }
    }
}
